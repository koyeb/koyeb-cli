on: [push]

name: Release

jobs:
  check:
    runs-on: ubuntu-latest
    if: startswith(github.ref, 'refs/heads') # Only run on branches
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v2
        with:
          go-version: "1.14"
      - name: "Run tests"
        run: |
          make test
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    if: startswith(github.ref, 'refs/tags/v') # Push events to matching v*, i.e. v1.0, v20.15.10
    env:
      GO111MODULE: "on"
      GOPATH: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
      - uses: actions/setup-go@v2
        with:
          go-version: "1.14"
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Build project
        run: |
          cd ./src/github.com/${{ github.repository }}
          ./scripts/build.sh ${{steps.get_version.outputs.VERSION}}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload linux-x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/github.com/${{ github.repository }}/build_output/koyeb-cli-${{steps.get_version.outputs.VERSION}}-linux-x86_64
          asset_name: koyeb-cli-linux-x86_64
          asset_content_type: application/octet-stream
      - name: Upload linux-386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/github.com/${{ github.repository }}/build_output/koyeb-cli-${{steps.get_version.outputs.VERSION}}-linux-386
          asset_name: koyeb-cli-linux-386
          asset_content_type: application/octet-stream
      - name: Upload darwin-x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/github.com/${{ github.repository }}/build_output/koyeb-cli-${{steps.get_version.outputs.VERSION}}-darwin-x86_64
          asset_name: koyeb-cli-darwin-x86_64
          asset_content_type: application/octet-stream
      - name: Upload windows-x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/github.com/${{ github.repository }}/build_output/koyeb-cli-${{steps.get_version.outputs.VERSION}}-windows-x86_64.exe
          asset_name: koyeb-cli-windows-x86_64.exe
          asset_content_type: application/octet-stream
      - name: Upload windows-386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/github.com/${{ github.repository }}/build_output/koyeb-cli-${{steps.get_version.outputs.VERSION}}-windows-386.exe
          asset_name: koyeb-cli-windows-386.exe
          asset_content_type: application/octet-stream
